
jobs:
- job:
  displayName: ubuntu-16.04
  pool:
    vmImage: 'ubuntu-16.04'
  timeoutInMinutes: 360

  steps:
  - bash: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH

  - bash: |
      conda config --add channels conda-forge
      conda create --yes --quiet --name deps clangdev=9.0.0 lld cmake ninja
    displayName: Install clang and lld

  - bash: |
      source activate deps
      mkdir build
      cd build
      export CC=clang
      export CXX=clang++
      cmake -G"Ninja" .. -DCMAKE_PREFIX_PATH=$CONDA_PREFIX
      ninja -j4
      ctest --output-on-failure -j4
    displayName: Build f18

- job:
  displayName: macOS-10.13
  pool:
    vmImage: 'macOS-10.13'
  timeoutInMinutes: 360

  steps:
  - bash: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH

  - bash: |
      conda config --add channels conda-forge
      conda create --yes --quiet --name deps clangdev=9.0.0 lld cmake ninja
    displayName: Install clang and lld

  - bash: |
      source activate deps
      mkdir build
      cd build
      export CC=clang
      export CXX=clang++
      cmake -G"Ninja" .. -DCMAKE_PREFIX_PATH=$CONDA_PREFIX
      ninja -j4
      ctest --output-on-failure -j4
    displayName: Build f18

- job:
  displayName: vs2017-win2016
  pool:
    vmImage: 'vs2017-win2016'
  timeoutInMinutes: 360

  steps:
  - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
    displayName: Add conda to PATH

  - script: |
      conda config --add channels conda-forge
      conda create --yes --quiet --name deps clangdev=9.0.0 lld cmake ninja
    displayName: Install clang and lld

  - script: |
      call activate deps
      mkdir build
      cd build
      set CC=clang
      set CXX=clang++
      call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" amd64
      cmake -G"Ninja" .. -DCMAKE_PREFIX_PATH=%CONDA_PREFIX%/Library
      ninja -j1 -k 0
      #ctest --output-on-failure -j2
    displayName: Build f18
